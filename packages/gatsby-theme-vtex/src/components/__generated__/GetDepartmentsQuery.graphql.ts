/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type GetDepartmentsQueryQueryVariables = Exact<{ [key: string]: never }>

export type GetDepartmentsQueryQuery = {
  allDepartment: { nodes: Array<{ name: Maybe<string>; slug: Maybe<string> }> }
}

// Query Related Code

export const GetDepartmentsQuery = {
  query:
    'query GetDepartmentsQuery {\n  allDepartment(sort: {order: ASC, fields: name}) {\n    nodes {\n      name\n      slug\n    }\n  }\n}\n',
  sha256Hash:
    '723457d642dc7bb9e87df32e46438eb35fc84cd67d41006f4f35dda5129de79e',
  operationName: 'GetDepartmentsQuery',
}
