/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type ProductPageQueryQueryVariables = Exact<{
  slug: Maybe<Scalars['String']>
  staticPath?: Maybe<Scalars['Boolean']>
}>

export type ProductPageQueryQuery = {
  vtex: {
    product: Maybe<{
      productName: Maybe<string>
      linkText: Maybe<string>
      productId: Maybe<string>
      description: Maybe<string>
      items: Maybe<
        Array<
          Maybe<{
            itemId: Maybe<string>
            images: Maybe<
              Array<
                Maybe<{ imageUrl: Maybe<string>; imageText: Maybe<string> }>
              >
            >
          }>
        >
      >
    }>
  }
}

// Query Related Code

export const ProductPageQuery = {
  query:
    'query ProductPageQuery($slug: String, $staticPath: Boolean = true) {\n  vtex {\n    product(slug: $slug) @include(if: $staticPath) {\n      productName\n      linkText\n      items {\n        images {\n          imageUrl\n          imageText\n        }\n        itemId\n      }\n      productId\n      description\n    }\n  }\n}\n',
  sha256Hash:
    'f2048eeac77e02ff3cda03983540aeb8662ba49df139e5ed06b37079f38c9f18',
  operationName: 'ProductPageQuery',
}
