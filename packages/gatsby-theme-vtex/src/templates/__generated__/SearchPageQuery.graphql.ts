/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type SearchPageQueryQueryVariables = Exact<{
  query: Maybe<Scalars['String']>
  map: Maybe<Scalars['String']>
  staticPath?: Maybe<Scalars['Boolean']>
}>

export type SearchPageQueryQuery = {
  vtex: {
    productSearch: Maybe<{
      titleTag: Maybe<string>
      breadcrumb: Maybe<
        Array<Maybe<{ href: Maybe<string>; name: Maybe<string> }>>
      >
      products: Maybe<
        Array<
          Maybe<{
            productId: Maybe<string>
            productName: Maybe<string>
            description: Maybe<string>
            linkText: Maybe<string>
            items: Maybe<
              Array<
                Maybe<{
                  itemId: Maybe<string>
                  images: Maybe<
                    Array<
                      Maybe<{
                        imageUrl: Maybe<string>
                        imageText: Maybe<string>
                      }>
                    >
                  >
                  sellers: Maybe<
                    Array<
                      Maybe<{
                        sellerId: Maybe<string>
                        commertialOffer: Maybe<{
                          AvailableQuantity: Maybe<number>
                          Price: Maybe<number>
                          ListPrice: Maybe<number>
                        }>
                      }>
                    >
                  >
                }>
              >
            >
          }>
        >
      >
    }>
    facets: Maybe<{
      brands: Maybe<
        Array<Maybe<{ name: string; value: string; quantity: number }>>
      >
      categoriesTrees: Maybe<
        Array<
          Maybe<{
            link: string
            name: Maybe<string>
            quantity: number
            children: Maybe<
              Array<
                Maybe<{ link: string; name: Maybe<string>; quantity: number }>
              >
            >
          }>
        >
      >
    }>
  }
}

// Query Related Code

export const SearchPageQuery = {
  query:
    'query SearchPageQuery($query: String, $map: String, $staticPath: Boolean = true) {\n  vtex {\n    productSearch(query: $query, map: $map, from: 0, to: 9) {\n      breadcrumb {\n        href\n        name\n      }\n      titleTag\n      products @include(if: $staticPath) {\n        productId\n        productName\n        description\n        linkText\n        items {\n          itemId\n          images {\n            imageUrl\n            imageText\n          }\n          sellers {\n            sellerId\n            commertialOffer {\n              AvailableQuantity\n              Price\n              ListPrice\n            }\n          }\n        }\n      }\n    }\n    facets(query: $query, map: $map) {\n      brands {\n        name\n        value\n        quantity\n      }\n      categoriesTrees {\n        link\n        name\n        quantity\n        children {\n          link\n          name\n          quantity\n        }\n      }\n    }\n  }\n}\n',
  sha256Hash:
    'f6c02b1b61ac861ccce50d683effbe88a5076965c524d84ca2aeea7cab75889e',
  operationName: 'SearchPageQuery',
}
